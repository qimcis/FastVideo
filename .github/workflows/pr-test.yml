name: PR Test

on:
  push:
    branches: [main]
    paths:
      - "fastvideo/**/*.py"
      - ".github/workflows/pr-test.yml"
  pull_request:
    branches: [main]
    types: [opened, ready_for_review, synchronize, reopened]
    paths:
      - "fastvideo/**/*.py"
      - ".github/workflows/pr-test.yml"

concurrency:
  group: pr-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  change-filter:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    outputs:
      encoder-test: ${{ steps.filter.outputs.encoder-test }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            encoder-test:
              - 'fastvideo/v1/models/encoders/**'
              - 'fastvideo/v1/models/loaders/**'

  encoder-test:
    needs: change-filter
    if: ${{ needs.change-filter.outputs.encoder-test == 'true' }}
    runs-on: ubuntu-latest
    environment: runpod-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.RUNPOD_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

      - name: Install dependencies
        run: pip install requests

      - name: Run tests on RunPod
        env:
          JOB_ID: "encoder-test"
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        timeout-minutes: 30
        run: >-
          python .github/scripts/runpod_api.py 
          --gpu-type "NVIDIA A40"
          --gpu-count 1
          --volume-size 100
          --test-command "./env_setup.sh &&
          pip install vllm &&
          pip install pytest &&
          pytest ./fastvideo/v1/tests/ --ignore=./fastvideo/v1/tests/old_tests/ -s"

  runpod-cleanup:
    needs: [encoder-test] # Add other jobs to this list as you create them
    if: >-
      always() && 
      ${{ github.event.pull_request.draft == false && 
          (contains(needs.*.result, 'success') || 
           contains(needs.*.result, 'failure')) }}
    runs-on: ubuntu-latest
    environment: runpod-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install requests

      - name: Cleanup all RunPod instances
        env:
          JOB_IDS: '["encoder-test"]' # JSON array of job IDs
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: python .github/scripts/runpod_cleanup.py
